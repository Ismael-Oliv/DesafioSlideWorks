{"version":3,"sources":["pages/Dashboard/style.ts","services/api.ts","components/Form/style.ts","components/Form/index.tsx","pages/Dashboard/index.tsx","style/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","api","axios","create","baseURL","params","key","token","idList","form","NameContainer","props","isError","EmailContainer","ContentContainer","CheckContainer","DropdownContainer","OpetionContainer","TagContainer","TagArea","TagContent","Ptags","p","isActive","Form","useState","formData","setFormData","option1","option2","option3","options","setOptions","web","ilustration","graphics","ui","design","app","iphone","interface","icon","webDesign","tags","setTags","inputName","setInputName","inputEmail","setInputEmail","handleFormSubmitButton","useCallback","event","a","preventDefault","name","email","APIKeys","process","REACT_APP_API_KEY","REACT_APP_TOKEN","REACT_APP_IDCART","cardPost","content","post","response","cardResponse","data","checklistOptions","id","checklistResponse","checklistAPI","tagPost","alert","console","log","action","onSubmit","type","placeholder","value","onChange","e","target","checked","htmlFor","onClick","Dashboard","className","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEaA,EAAYC,IAAOC,IAAV,qH,8CCATC,E,OAAMC,EAAMC,OAAO,CAC/BC,QAAS,0BACTC,OAAQ,CACP,CACCC,IAAK,mCACLC,MAAO,mEACPC,OAAQ,+BCNEV,EAAYC,IAAOU,KAAV,yVAuBTC,EACZX,IAAOC,IADkB,oNAWd,SAACW,GAAD,OAAYA,EAAMC,QAAU,gBAAkB,MAU7CC,EACZd,IAAOC,IADmB,+MAWf,SAACW,GAAD,OAAYA,EAAMC,QAAU,gBAAkB,MAI7CE,EAAmBf,IAAOC,IAAV,iKAUhBe,EAAiBhB,IAAOC,IAAV,2VAiBdgB,EAAoBjB,IAAOC,IAAV,mPAcjBiB,EAAmBlB,IAAOC,IAAV,uKAUhBkB,EAAenB,IAAOC,IAAV,8GAQZmB,EAAUpB,IAAOC,IAAV,wLAaPoB,EAAarB,IAAOC,IAAV,0BAKVqB,EACZtB,IAAOuB,EADU,4KAUH,SAACX,GAAD,OAAYA,EAAMY,SAAW,UAAY,M,OClIjD,SAASC,IAAQ,IAAD,EACWC,mBAAoB,IAD/B,mBACdC,EADc,KACJC,EADI,OAESF,mBAAoB,CAChDG,SAAS,EACTC,SAAS,EACTC,SAAS,IALU,mBAEdC,EAFc,KAELC,EAFK,OAQGP,mBAAgB,CACtCQ,KAAK,EACLC,aAAa,EACbC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,QAAQ,EACRC,WAAW,EACXC,MAAM,EACNC,WAAW,IAlBQ,mBAQdC,EARc,KAQRC,EARQ,OAqBanB,oBAAS,GArBtB,mBAqBdoB,EArBc,KAqBHC,EArBG,OAsBerB,oBAAS,GAtBxB,mBAsBdsB,EAtBc,KAsBFC,EAtBE,KAwBfC,EAAyBC,sBAAW,uCACxC,WAAOC,GAAP,mCAAAC,EAAA,yDACED,EAAME,iBAED3B,EAAS4B,KAHhB,uBAIIR,GAAa,GAJjB,6BAOOpB,EAAS6B,MAPhB,uBAQIP,GAAc,GARlB,iCAYQQ,EAAU,CACdlD,IAAKmD,iKAAYC,kBACjBnD,MAAOkD,iKAAYE,gBACnBnD,OAAQiD,iKAAYG,kBAfxB,SAmBUC,EAnBV,uBAmBqCL,EAAQlD,IAnB7C,kBAmB0DkD,EAAQjD,MAnBlE,mBAmBkFiD,EAAQhD,OAnB1F,iBAmByGkB,EAAS4B,KAnBlH,iBAmB+H5B,EAASoC,SAnBxI,UAoB2B7D,EAAI8D,KAAaF,GApB5C,WAoBUG,EApBV,OAqBUC,EAAeD,EAASE,OAE1BnC,EAAQH,SAAWG,EAAQF,SAAWE,EAAQD,SAvBtD,wBAwBYqC,EAxBZ,4BAwBoDX,EAAQlD,IAxB5D,kBAwByEkD,EAAQjD,MAxBjF,mBAwBiG0D,EAAaG,GAxB9G,2BAyB6BnE,EAAI8D,KAAiBI,GAzBlD,QAyBYH,EAzBZ,OA0BYK,EAAoBL,EAASE,KA1BzC,OAAAd,EAAA,KA4BsBrB,GA5BtB,kDA4BezB,EA5Bf,YA6BYyB,EAAQzB,GA7BpB,wBA8BgBgE,EA9BhB,wBA8BgDD,EAAkBD,GA9BlE,2BA8BuFZ,EAAQlD,IA9B/F,kBA8B4GkD,EAAQjD,MA9BpH,iBA8BkID,GA9BlI,UA+BgBL,EAAI8D,KAAaO,GA/BjC,uCAAAlB,EAAA,KAoCoBT,GApCpB,kDAoCarC,EApCb,YAqCUqC,EAAKrC,GArCf,wBAsCciE,EAtCd,mBAsCoCN,EAAaG,GAtCjD,uBAsCkEZ,EAAQlD,IAtC1E,kBAsCuFkD,EAAQjD,MAtC/F,iBAsC6GD,EAtC7G,0BAuCcL,EAAI8D,KAAKQ,GAvCvB,yDA2CWC,MAAM,4BA3CjB,kCA6CIC,QAAQC,IAAR,MA7CJ,0DADwC,sDAiDxC,CAAChD,EAAS4B,KAAM5B,EAAS6B,MAAO7B,EAASoC,QAAS/B,EAASY,IAG7D,OACE,eAAC,EAAD,CAAWgC,OAAO,IAAIC,SAAU3B,EAAhC,UACE,gCACE,eAACvC,EAAD,CAAeE,UAAWiC,EAA1B,UACE,wCACA,uBACEgC,KAAK,OACLC,YAAY,WACZC,MAAK,OAAErD,QAAF,IAAEA,OAAF,EAAEA,EAAU4B,KACjB0B,SAAU,SAACC,GACTtD,EAAY,2BAAKD,GAAN,IAAgB4B,KAAM2B,EAAEC,OAAOH,SAC1CjC,GAAa,SAInB,eAACjC,EAAD,CAAgBD,UAAWmC,EAA3B,UACE,yCACA,uBACE8B,KAAK,QACLC,YAAY,kBACZC,MAAOrD,EAAS6B,MAChByB,SAAU,SAACC,GACTtD,EAAY,2BAAKD,GAAN,IAAgB6B,MAAO0B,EAAEC,OAAOH,SAC3C/B,GAAc,SAIpB,cAAClC,EAAD,UACE,0BACEgE,YAAY,iBACZC,MAAOrD,EAASoC,QAChBkB,SAAU,SAACC,GACTtD,EAAY,2BAAKD,GAAN,IAAgBoC,QAASmB,EAAEC,OAAOH,iBAKrD,gCACE,eAAChE,EAAD,WACE,gCACE,uBACEqD,GAAG,UACHS,KAAK,WACLG,SAAU,SAACC,GAAD,OACRjD,EAAW,2BAAKD,GAAN,IAAeH,QAASqD,EAAEC,OAAOC,cAG/C,uBAAOC,QAAQ,UAAf,8BAGF,gCACE,uBACEhB,GAAG,UACHS,KAAK,WACLG,SAAU,SAACC,GAAD,OACRjD,EAAW,2BAAKD,GAAN,IAAeF,QAASoD,EAAEC,OAAOC,cAG/C,uBAAOC,QAAQ,UAAf,8BAGF,gCACE,uBACEhB,GAAG,UACHS,KAAK,WACLG,SAAU,SAACC,GACTjD,EAAW,2BAAKD,GAAN,IAAeD,QAASmD,EAAEC,OAAOC,cAG/C,uBAAOC,QAAQ,UAAf,iCAGJ,eAACpE,EAAD,WACE,uBAAOoE,QAAQ,UAAf,sBAEA,wBAAQ9B,KAAK,UAAUc,GAAG,UAA1B,SACE,wBAAQW,MAAM,UAAd,gCAGJ,eAAC9D,EAAD,WACE,8BACE,gDAEF,8BACE,mDAGJ,eAACC,EAAD,WACE,oCACA,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CACEE,SAAUoB,EAAKV,IACfmC,GAAG,MACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYV,KAAKU,EAAKV,QAJjC,iBASA,cAACZ,EAAD,CACEE,SAAUoB,EAAKT,YACfkC,GAAG,cACHiB,QAAS,WACPzC,EAAQ,2BACHD,GADE,IAELT,aAAaS,EAAKT,gBANxB,yBAYA,cAACb,EAAD,CACEE,SAAUoB,EAAKR,SACfiC,GAAG,WACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYR,UAAUQ,EAAKR,aAJtC,sBASA,cAACd,EAAD,CACEE,SAAUoB,EAAKP,GACfgC,GAAG,KACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYP,IAAIO,EAAKP,OAJhC,gBASA,cAACf,EAAD,CACEE,SAAUoB,EAAKN,OACf+B,GAAG,SACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYN,QAAQM,EAAKN,WAJpC,oBASA,cAAChB,EAAD,CACEE,SAAUoB,EAAKL,IACf8B,GAAG,MACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYL,KAAKK,EAAKL,QAJjC,iBASA,cAACjB,EAAD,CACEE,SAAUoB,EAAKJ,OACf6B,GAAG,SACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYJ,QAAQI,EAAKJ,WAJpC,oBASA,cAAClB,EAAD,CACEE,SAAUoB,EAAKH,UACf4B,GAAG,YACHiB,QAAS,WACPzC,EAAQ,2BACHD,GADE,IAELH,WAAWG,EAAKH,cANtB,uBAYA,cAACnB,EAAD,CACEE,SAAUoB,EAAKF,KACf2B,GAAG,OACHiB,QAAS,WACPzC,EAAQ,2BAAKD,GAAN,IAAYF,MAAME,EAAKF,SAJlC,kBASA,cAACpB,EAAD,CACEE,SAAUoB,EAAKD,UACf0B,GAAG,YACHiB,QAAS,WACPzC,EAAQ,2BACHD,GADE,IAELD,WAAWC,EAAKD,cANtB,2BAaF,wBAAQmC,KAAK,SAAb,gCC1RL,SAASS,IACd,OACE,cAACxF,EAAD,CAAWyF,UAAU,OAArB,SACE,cAAC/D,EAAD,MCJC,IAAMgE,EAAcC,YAAH,sGCCjB,SAASC,IACd,OACE,qCACA,cAACJ,EAAD,IACA,cAACE,EAAD,OCFJG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.d263acdb.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 0 auto;\n`;\n","import axios from 'axios';\n\nexport const api = axios.create({\n\tbaseURL: 'https://api.trello.com/',\n\tparams: [\n\t\t{\n\t\t\tkey: 'e793b331b6b1dc8dbc432d225bb35ef4',\n\t\t\ttoken: 'c35758a3e5803c3fa797597a8a7d4bad400867c2d0b1e3bcfc25ad0b95cc66fb',\n\t\t\tidList: '6095ac267228ba501e1c2ba1'\n\t\t}\n\t]\n});\n","import styled from 'styled-components';\n\nexport const Container = styled.form`\n\tdisplay: grid;\n\tgrid-template-columns: 1.6fr 1fr;\n\tgrid-gap: 2rem;\n\tmargin: 60px auto;\n\n\t@media screen and (max-width: 886px) {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\tmax-width: 980px;\n\t\tmargin: 10px 40px;\n\t}\n\n\tmax-width: 1120px;\n\twidth: 100%;\n\tpadding: 1rem;\n`;\n\ninterface INameContainer {\n\tisError: boolean;\n}\n\nexport const NameContainer =\n\tstyled.div <\n\tINameContainer >\n\t`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1rem;\n\tinput {\n\t\tpadding: 0.6rem;\n\t\tborder: 1px solid grey;\n\t\tborder-radius: 5px;\n\t\tborder: ${(props) => (props.isError ? '2px solid red' : '')}\n\t}\n\n\t\n`;\n\ninterface IEmailContainer {\n\tisError: boolean;\n}\n\nexport const EmailContainer =\n\tstyled.div <\n\tIEmailContainer >\n\t`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 5rem;\n\tinput {\n\t\tpadding: 0.6rem;\n\t\tborder: 1px solid grey;\n\t\tborder-radius: 5px;\n\t\tborder: ${(props) => (props.isError ? '2px solid red' : '')};\n\t}\n`;\n\nexport const ContentContainer = styled.div`\n\ttextarea {\n\t\tpadding: 0.6rem;\n\t\tborder: 1px solid grey;\n\t\tborder-radius: 5px;\n\t\theight: 200px;\n\t\twidth: 100%;\n\t}\n`;\n\nexport const CheckContainer = styled.div`\n\tdisplay: flex;\n\talign-items: flex-end;\n\tjustify-content: space-between;\n\theight: 50px;\n\tmargin-bottom: 1.3rem;\n\n\tdiv > input {\n\t\tmargin-right: 5px;\n\t\t-ms-transform: scale(2);\n\t\t-moz-transform: scale(2);\n\t\t-webkit-transform: scale(1.5);\n\t\tborder-radius: 0;\n\t\tborder: 1px solid grey;\n\t}\n`;\n\nexport const DropdownContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 0.6rem;\n\n\tselect {\n\t\theight: 100%;\n\t\tborder: 1px solid grey;\n\t\tbackground: transparent;\n\t\tborder-radius: 5px;\n\t\tpadding: 0.6rem;\n\t}\n`;\n\nexport const OpetionContainer = styled.div`\n\tdiv {\n\t\theight: 100%;\n\t\tborder: 1px solid grey;\n\t\tbackground: transparent;\n\t\tborder-radius: 5px;\n\t\tpadding: 0.6rem;\n\t}\n`;\n\nexport const TagContainer = styled.div`\n\tmargin-top: 2.5rem;\n\tbutton {\n\t\tpadding: 10px;\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const TagArea = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 2fr 1fr;\n\tgrid-gap: 1rem;\n\n\talign-items: flex-end;\n\n\tbutton {\n\t\theight: 60px;\n\t\twidth: 100%;\n\t}\n`;\n\nexport const TagContent = styled.div``;\n\ninterface IPData {\n\tisActive: boolean;\n}\nexport const Ptags =\n\tstyled.p <\n\tIPData >\n\t`\n\tcursor: pointer;\n\tmargin: 4px 1.3px;\n\tfloat: left;\n\tborder: 1px solid grey;\n\tborder-radius: 5px;\n\tpadding: 5px;\n\tbackground: ${(props) => (props.isActive ? '#33FFFC' : '')}\n`;\n","import { FormEvent, useState, useCallback } from \"react\";\nimport { IFormData, IOpitions, Icards, IChecklist, ITags } from \"./types\";\nimport { api } from \"../../services/api\";\n\nimport {\n  Container,\n  NameContainer,\n  EmailContainer,\n  ContentContainer,\n  CheckContainer,\n  DropdownContainer,\n  OpetionContainer,\n  TagContainer,\n  TagContent,\n  TagArea,\n  Ptags,\n} from \"./style\";\n\nexport function Form() {\n  const [formData, setFormData] = useState<IFormData>({} as IFormData);\n  const [options, setOptions] = useState<IOpitions>({\n    option1: false,\n    option2: false,\n    option3: false,\n  });\n\n  const [tags, setTags] = useState<ITags>({\n    web: false,\n    ilustration: false,\n    graphics: false,\n    ui: false,\n    design: false,\n    app: false,\n    iphone: false,\n    interface: false,\n    icon: false,\n    webDesign: false,\n  });\n\n  const [inputName, setInputName] = useState(false);\n  const [inputEmail, setInputEmail] = useState(false);\n\n  const handleFormSubmitButton = useCallback(\n    async (event: FormEvent) => {\n      event.preventDefault();\n\n      if (!formData.name) {\n        setInputName(true);\n        return;\n      }\n      if (!formData.email) {\n        setInputEmail(true);\n        return;\n      }\n\n      const APIKeys = {\n        key: process.env.REACT_APP_API_KEY,\n        token: process.env.REACT_APP_TOKEN,\n        idList: process.env.REACT_APP_IDCART,\n      };\n\n      try {\n        const cardPost = `/1/cards?key=${APIKeys.key}&token=${APIKeys.token}&idList=${APIKeys.idList}&name=${formData.name}&desc=${formData.content}`;\n        const response = await api.post<Icards>(cardPost);\n        const cardResponse = response.data;\n\n        if (options.option1 || options.option2 || options.option3) {\n          const checklistOptions = `/1/checklists?key=${APIKeys.key}&token=${APIKeys.token}&idCard=${cardResponse.id}&name=options`;\n          const response = await api.post<IChecklist>(checklistOptions);\n          const checklistResponse = response.data;\n\n          for (let key in options) {\n            if (options[key]) {\n              const checklistAPI = `/1/checklists/${checklistResponse.id}/checkItems?key=${APIKeys.key}&token=${APIKeys.token}&name=${key}`;\n              await api.post<Icards>(checklistAPI);\n            }\n          }\n        }\n\n        for (let key in tags) {\n          if (tags[key]) {\n            const tagPost = `/1/cards/${cardResponse.id}/labels?key=${APIKeys.key}&token=${APIKeys.token}&name=${key}&color=green`;\n            await api.post(tagPost);\n          }\n        }\n\n        return alert(\"Card criado com sucesso\");\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    [formData.name, formData.email, formData.content, options, tags]\n  );\n\n  return (\n    <Container action=\"#\" onSubmit={handleFormSubmitButton}>\n      <div>\n        <NameContainer isError={!!inputName}>\n          <span>Nome</span>\n          <input\n            type=\"text\"\n            placeholder=\"John Doe\"\n            value={formData?.name}\n            onChange={(e) => {\n              setFormData({ ...formData, name: e.target.value });\n              setInputName(false);\n            }}\n          />\n        </NameContainer>\n        <EmailContainer isError={!!inputEmail}>\n          <span>Email</span>\n          <input\n            type=\"email\"\n            placeholder=\"error@gmail.com\"\n            value={formData.email}\n            onChange={(e) => {\n              setFormData({ ...formData, email: e.target.value });\n              setInputEmail(false);\n            }}\n          />\n        </EmailContainer>\n        <ContentContainer>\n          <textarea\n            placeholder=\"type something\"\n            value={formData.content}\n            onChange={(e) => {\n              setFormData({ ...formData, content: e.target.value });\n            }}\n          />\n        </ContentContainer>\n      </div>\n      <div>\n        <CheckContainer>\n          <div>\n            <input\n              id=\"option1\"\n              type=\"checkbox\"\n              onChange={(e) =>\n                setOptions({ ...options, option1: e.target.checked })\n              }\n            />\n            <label htmlFor=\"option1\">Opção 1</label>\n          </div>\n\n          <div>\n            <input\n              id=\"option2\"\n              type=\"checkbox\"\n              onChange={(e) =>\n                setOptions({ ...options, option2: e.target.checked })\n              }\n            />\n            <label htmlFor=\"option2\">Opção 2</label>\n          </div>\n\n          <div>\n            <input\n              id=\"option3\"\n              type=\"checkbox\"\n              onChange={(e) => {\n                setOptions({ ...options, option3: e.target.checked });\n              }}\n            />\n            <label htmlFor=\"option3\">Opção 3</label>\n          </div>\n        </CheckContainer>\n        <DropdownContainer>\n          <label htmlFor=\"options\">Dropdown</label>\n\n          <select name=\"options\" id=\"options\">\n            <option value=\"option1\">Opção 1</option>\n          </select>\n        </DropdownContainer>\n        <OpetionContainer>\n          <div>\n            <p>Opção 2</p>\n          </div>\n          <div>\n            <p>Opção 3</p>\n          </div>\n        </OpetionContainer>\n        <TagContainer>\n          <p>tag</p>\n          <TagArea>\n            <TagContent>\n              <Ptags\n                isActive={tags.web}\n                id=\"web\"\n                onClick={() => {\n                  setTags({ ...tags, web: tags.web ? false : true });\n                }}\n              >\n                web\n              </Ptags>\n              <Ptags\n                isActive={tags.ilustration}\n                id=\"ilustration\"\n                onClick={() => {\n                  setTags({\n                    ...tags,\n                    ilustration: tags.ilustration ? false : true,\n                  });\n                }}\n              >\n                ilustration\n              </Ptags>\n              <Ptags\n                isActive={tags.graphics}\n                id=\"graphics\"\n                onClick={() => {\n                  setTags({ ...tags, graphics: tags.graphics ? false : true });\n                }}\n              >\n                graphics\n              </Ptags>\n              <Ptags\n                isActive={tags.ui}\n                id=\"ui\"\n                onClick={() => {\n                  setTags({ ...tags, ui: tags.ui ? false : true });\n                }}\n              >\n                ui\n              </Ptags>\n              <Ptags\n                isActive={tags.design}\n                id=\"design\"\n                onClick={() => {\n                  setTags({ ...tags, design: tags.design ? false : true });\n                }}\n              >\n                design\n              </Ptags>\n              <Ptags\n                isActive={tags.app}\n                id=\"app\"\n                onClick={() => {\n                  setTags({ ...tags, app: tags.app ? false : true });\n                }}\n              >\n                app\n              </Ptags>\n              <Ptags\n                isActive={tags.iphone}\n                id=\"iphone\"\n                onClick={() => {\n                  setTags({ ...tags, iphone: tags.iphone ? false : true });\n                }}\n              >\n                iphone\n              </Ptags>\n              <Ptags\n                isActive={tags.interface}\n                id=\"interface\"\n                onClick={() => {\n                  setTags({\n                    ...tags,\n                    interface: tags.interface ? false : true,\n                  });\n                }}\n              >\n                interface\n              </Ptags>\n              <Ptags\n                isActive={tags.icon}\n                id=\"icon\"\n                onClick={() => {\n                  setTags({ ...tags, icon: tags.icon ? false : true });\n                }}\n              >\n                icon\n              </Ptags>\n              <Ptags\n                isActive={tags.webDesign}\n                id=\"webDesign\"\n                onClick={() => {\n                  setTags({\n                    ...tags,\n                    webDesign: tags.webDesign ? false : true,\n                  });\n                }}\n              >\n                web design\n              </Ptags>\n            </TagContent>\n            <button type=\"submit\">Enviar</button>\n          </TagArea>\n        </TagContainer>\n      </div>\n    </Container>\n  );\n}\n","import { Container } from \"./style\";\nimport { Form } from \"../../components/Form\";\n\nexport function Dashboard() {\n  return (\n    <Container className=\"main\">\n      <Form />\n    </Container>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n\n*{\n    margin:0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n\n`;\n","import { Dashboard } from \"./pages/Dashboard\"\nimport{ GlobalStyle } from \"./style/global\";\n\nexport function App() {\n  return (\n    <>\n    <Dashboard />\n    <GlobalStyle />\n    </>\n  );\n}\n\n\n","import \"dotenv/config\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}